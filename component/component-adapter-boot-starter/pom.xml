<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>component</artifactId>
        <groupId>com.particle</groupId>
        <version>2.0.0-beta</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>component-adapter-boot-starter</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>global-trans-boot-stater</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 用户登录适配，主要是为了获取权限 -->
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>user-adapter</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- 获取用户权限实现 -->
        <!-- 用来监听用户添加可以添加角色 -->

        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>func-adapter</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- 获取用户权限实现 -->
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>role-adapter</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>global-light-share</artifactId>
            <version>${particle.version}</version>
        </dependency>

        <!-- 在引入租户后，同一个用户可以归属到不同的租户，这拿得用户的查询不得不考虑租户 -->
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>tenant-adapter</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 操作日志适配，主要实现 global-data-audit-boot-starter 操作日志持久化-->
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>op-log-adapter</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 部门 主要用来监听用户添加或修改时处理部门 -->
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>dept-adapter</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- oauth2authorization 结合 open-platform 搞点事情，主要是获取客户端密码 -->
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>oauth2authorization-adapter</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- oauth2authorization 结合 open-platform 搞点事情，主要是获取客户端密码 -->
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>open-platform-adapter</artifactId>
            <version>${particle.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>
</project>