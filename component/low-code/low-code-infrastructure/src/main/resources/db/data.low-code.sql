-- import classpath:db/data.low-code.func.sql
-- import classpath:db/data.low-code.dict.sql

-- 片段模板测试数据样例，仅供参考
INSERT INTO `component_lowcode_segment_template` (`id`, `code`, `name`, `name_template`, `name_output_variable`, `content_template`, `reference_segment_template_id`, `output_type_dict_id`, `output_variable`, `share_variables`, `remark`, `level`, `parent_id`, `parent_id1`, `parent_id2`, `parent_id3`, `parent_id4`, `parent_id5`, `parent_id6`, `parent_id7`, `parent_id8`, `parent_id9`, `parent_id10`, `version`, `tenant_id`, `create_at`, `create_by`, `update_at`, `update_by`) VALUES (1625434873126268930, 'test', '测试', '### 名称测试\n我的编码为test,我的名称为测试 #(global.test)', 'testName', '### 测试共享变量\n#for(item : share.import)\n#(item)\n#end\n\n### 测试共享变量，引用模板中定义了 refrecedImport 共享变量，可以被直接合并，即直接使用\n#for(item : share.refrecedImport)\n#(item)\n#end\n\n\n### 测试全局系统变量\ncurrentDate: #(sys.currentDate)\ncurrentDateTime: #(sys.currentDateTime)\n\n### 测试全局自定义变量\nglobal.test = #(global.test)\n\n### 测试全局扩展变量\next.test = #(ext.test)\n\n\n### 测试子级输出变量\ntestChild1 = #(child.testChild1)\n\ntestChild2 = #(child.testChild2)\n\n### 输出路径输出变量\noutputFileParentAbsoluteDir = #(outputFileParentAbsoluteDir)\n', 1625504497146605570, 1625787765335097345, NULL, 'import', '测试根模板，单独测试子级模板可能会系统异常，这是正常的，因为子级中可能引用了父级变量', 1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '2023-02-14 18:00:48', NULL, NULL, NULL);
INSERT INTO `component_lowcode_segment_template` (`id`, `code`, `name`, `name_template`, `name_output_variable`, `content_template`, `reference_segment_template_id`, `output_type_dict_id`, `output_variable`, `share_variables`, `remark`, `level`, `parent_id`, `parent_id1`, `parent_id2`, `parent_id3`, `parent_id4`, `parent_id5`, `parent_id6`, `parent_id7`, `parent_id8`, `parent_id9`, `parent_id10`, `version`, `tenant_id`, `create_at`, `create_by`, `update_at`, `update_by`) VALUES (1625492151447662594, 'testChild1', '测试子级1', NULL, NULL, '### 共享变量添加，可以使用if语句，因为直接使用输出指令会显示true\n#if(parents.share.import.add(\'import java.util.List;\'))#end\n#if(parents.share.refrecedImport.add(\'import java.util.refrecedImport;\'))#end\n### 子级中使用全局变量\n#(global.test + \'   \' + ext.test)', NULL, 1625787765335097345, 'testChild1', NULL, NULL, 2, 1625434873126268930, 1625434873126268930, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '2023-02-14 21:48:24', NULL, NULL, NULL);
INSERT INTO `component_lowcode_segment_template` (`id`, `code`, `name`, `name_template`, `name_output_variable`, `content_template`, `reference_segment_template_id`, `output_type_dict_id`, `output_variable`, `share_variables`, `remark`, `level`, `parent_id`, `parent_id1`, `parent_id2`, `parent_id3`, `parent_id4`, `parent_id5`, `parent_id6`, `parent_id7`, `parent_id8`, `parent_id9`, `parent_id10`, `version`, `tenant_id`, `create_at`, `create_by`, `update_at`, `update_by`) VALUES (1625499909504970753, 'testChild2', '测试子级2', NULL, NULL, '### 测试父级名称变量\n父级名称为: #(parent.testName)', NULL, 1625787765335097345, 'testChild2', NULL, NULL, 2, 1625434873126268930, 1625434873126268930, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '2023-02-14 22:19:13', NULL, NULL, NULL);
INSERT INTO `component_lowcode_segment_template` (`id`, `code`, `name`, `name_template`, `name_output_variable`, `content_template`, `reference_segment_template_id`, `output_type_dict_id`, `output_variable`, `share_variables`, `remark`, `level`, `parent_id`, `parent_id1`, `parent_id2`, `parent_id3`, `parent_id4`, `parent_id5`, `parent_id6`, `parent_id7`, `parent_id8`, `parent_id9`, `parent_id10`, `version`, `tenant_id`, `create_at`, `create_by`, `update_at`, `update_by`) VALUES (1625504497146605570, 'testRefreced', '测试被引用', NULL, NULL, '### 输出内容变量,被引用的同字段如果有值会被覆盖，但共享变量会被合并\n我是被引用的内容模板 #{global.text}', NULL, 1625787765335097345, '', 'refrecedImport', '该模板被 测试模板 引用', 1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '2023-02-14 22:37:27', NULL, NULL, NULL);
INSERT INTO `component_lowcode_segment_template` (`id`, `code`, `name`, `name_template`, `name_output_variable`, `content_template`, `reference_segment_template_id`, `output_type_dict_id`, `output_variable`, `share_variables`, `remark`, `level`, `parent_id`, `parent_id1`, `parent_id2`, `parent_id3`, `parent_id4`, `parent_id5`, `parent_id6`, `parent_id7`, `parent_id8`, `parent_id9`, `parent_id10`, `version`, `tenant_id`, `create_at`, `create_by`, `update_at`, `update_by`) VALUES (1625691275757432834, 'testDir', '测试目录', 'testDirtestDir', NULL, NULL, NULL, 1625787699807485954, NULL, NULL, '输出目录在模板渲染时必须指定输出父目录，否则可能找不到目录', 1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '2023-02-15 10:59:39', NULL, NULL, NULL);
INSERT INTO `component_lowcode_segment_template` (`id`, `code`, `name`, `name_template`, `name_output_variable`, `content_template`, `reference_segment_template_id`, `output_type_dict_id`, `output_variable`, `share_variables`, `remark`, `level`, `parent_id`, `parent_id1`, `parent_id2`, `parent_id3`, `parent_id4`, `parent_id5`, `parent_id6`, `parent_id7`, `parent_id8`, `parent_id9`, `parent_id10`, `version`, `tenant_id`, `create_at`, `create_by`, `update_at`, `update_by`) VALUES (1625694053951156225, 'testFile', '测试文件', 'testFiletestFile.txt', NULL, '这是文件内容', NULL, 1625787619817914370, NULL, NULL, '输出文件在模板渲染时必须指定输出父目录，否则可能引起错误如：生成的文件在系统文件中导致错误，也没有意义', 1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '2023-02-15 11:10:41', NULL, NULL, NULL);