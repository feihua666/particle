package com.particle.openplatform.app.doc.api.impl;

import com.particle.common.app.AbstractBaseApplicationServiceImpl;
import com.particle.common.client.dto.command.IdCommand;
import com.particle.global.catchlog.CatchAndLog;
import com.particle.global.dto.response.SingleResponse;
import com.particle.openplatform.app.doc.executor.OpenplatformDocApiDocTemplateExampleCodeCreateCommandExecutor;
import com.particle.openplatform.app.doc.executor.OpenplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor;
import com.particle.openplatform.app.doc.executor.OpenplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor;
import com.particle.openplatform.client.doc.api.IOpenplatformDocApiDocTemplateExampleCodeApplicationService;
import com.particle.openplatform.client.doc.dto.command.OpenplatformDocApiDocTemplateExampleCodeCreateCommand;
import com.particle.openplatform.client.doc.dto.command.OpenplatformDocApiDocTemplateExampleCodeUpdateCommand;
import com.particle.openplatform.client.doc.dto.data.OpenplatformDocApiDocTemplateExampleCodeVO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
/**
 * <p>
 * 开放接口文档模板示例代码 门面服务实现类
 * </p>
 *
 * @author yw
 * @since 2024-03-18 17:04:26
 */
@Transactional
@Service
@CatchAndLog
public class OpenplatformDocApiDocTemplateExampleCodeApplicationServiceImpl extends AbstractBaseApplicationServiceImpl implements IOpenplatformDocApiDocTemplateExampleCodeApplicationService {

	private OpenplatformDocApiDocTemplateExampleCodeCreateCommandExecutor openplatformDocApiDocTemplateExampleCodeCreateCommandExecutor;

	private OpenplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor openplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor;

	private OpenplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor openplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor;


	@Override
	public SingleResponse<OpenplatformDocApiDocTemplateExampleCodeVO> create(OpenplatformDocApiDocTemplateExampleCodeCreateCommand openplatformDocApiDocTemplateExampleCodeCreateCommand) {
		return openplatformDocApiDocTemplateExampleCodeCreateCommandExecutor.execute(openplatformDocApiDocTemplateExampleCodeCreateCommand);
	}

	@Override
	public SingleResponse<OpenplatformDocApiDocTemplateExampleCodeVO> delete(IdCommand deleteCommand) {
		return openplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor.execute(deleteCommand);
	}

	@Override
	public SingleResponse<OpenplatformDocApiDocTemplateExampleCodeVO> update(OpenplatformDocApiDocTemplateExampleCodeUpdateCommand openplatformDocApiDocTemplateExampleCodeUpdateCommand) {
		return openplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor.execute(openplatformDocApiDocTemplateExampleCodeUpdateCommand);
	}

	@Autowired
	public void setOpenplatformDocApiDocTemplateExampleCodeCreateCommandExecutor(OpenplatformDocApiDocTemplateExampleCodeCreateCommandExecutor openplatformDocApiDocTemplateExampleCodeCreateCommandExecutor) {
		this.openplatformDocApiDocTemplateExampleCodeCreateCommandExecutor = openplatformDocApiDocTemplateExampleCodeCreateCommandExecutor;
	}

	@Autowired
	public void setOpenplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor(OpenplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor openplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor) {
		this.openplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor = openplatformDocApiDocTemplateExampleCodeDeleteCommandExecutor;
	}
	@Autowired
	public void setOpenplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor(OpenplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor openplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor) {
		this.openplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor = openplatformDocApiDocTemplateExampleCodeUpdateCommandExecutor;
	}

}
