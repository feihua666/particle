import{k as c,d as A,r as f,a as C,b as o,o as F,c as B,e as l,w as P,F as R}from"./index-DoSQKVHz.js";const S=[{field:{name:"schedulerName"},element:{comp:"el-input",formItemProps:{label:"任务计划名称"},compProps:{clearable:!0}}},{field:{name:"schedulerInstanceId"},element:{comp:"el-input",formItemProps:{label:"任务计划实例id"},compProps:{clearable:!0}}},{field:{name:"name"},element:{comp:"el-input",formItemProps:{label:"触发器名称"},compProps:{clearable:!0}}},{field:{name:"group"},element:{comp:"el-input",formItemProps:{label:"触发器组"},compProps:{clearable:!0}}}];let d="/admin/web/schedule/trigger";const D=t=>c.post(d+"/pauseTrigger",t),M=t=>c.post(d+"/resumeTrigger",t),y=t=>c.get(d+"/getTriggerList",{params:t}),L=A({__name:"ScheduleTriggerManagePage",props:{schedulerName:{type:String},schedulerInstanceId:{type:String}},setup(t){const g=f(null),b=t,s=C({form:{schedulerName:b.schedulerName,schedulerInstanceId:b.schedulerInstanceId},formComps:S,tableColumns:[{prop:"name",label:"任务名称"},{prop:"group",label:"任务组"},{prop:"cronExpression",label:"cronExpression"},{prop:"triggerState",label:"状态"},{prop:"triggerClassName",label:"类名称",showOverflowTooltip:!0},{prop:"calendarName",label:"日历名称"},{prop:"priority",label:"优先级"},{prop:"isMayFireAgain",label:"是否可以再次触发"},{prop:"startAt",label:"开始于"},{prop:"endAt",label:"结束于"},{prop:"nextFireAt",label:"下一次触发时间"},{prop:"previousFireAt",label:"上一次触发时间"},{prop:"finalFireAt",label:"最后触发时间"},{prop:"misfireInstruction",label:"失火说明"},{prop:"description",label:"描述信息",showOverflowTooltip:!0}]}),a=f({buttonText:"查询",loading:!1,permission:"schedule:getTriggerList"}),p=()=>{g.value.refreshData()},I=({pageQuery:e})=>y({...s.form,...e}),T={permission:a.value.permission},x=({row:e,column:u,$index:m})=>{if(m<0)return[];e.schedulerName,e.schedulerInstanceId;let n={schedulerName:e.schedulerName,schedulerInstanceId:e.schedulerInstanceId,name:e.name,group:e.group};return e.schedulerName,e.schedulerInstanceId,[{txt:"暂停",text:!0,permission:"schedule:trigger:pause",disabled:e.triggerState!="NORMAL",methodConfirmText:`确定要暂停 ${e.name} 吗？`,method(){return D(n).then(r=>(p(),Promise.resolve(r)))}},{txt:"恢复",text:!0,permission:"schedule:trigger:resume",disabled:e.triggerState!="PAUSED",methodConfirmText:`确定要复制 ${e.name} 吗？`,method(){return M(n).then(r=>(p(),Promise.resolve(r)))}}]};return(e,u)=>{const m=o("PtForm"),n=o("PtButtonGroup"),h=o("el-table-column"),r=o("PtTable"),_=o("PtRouteViewPopover");return F(),B(R,null,[l(m,{form:s.form,method:p,defaultButtonsShow:"submit,reset",submitAttrs:a.value,inline:"",labelWidth:"110",comps:s.formComps},null,8,["form","submitAttrs","comps"]),l(r,{ref_key:"tableRef",ref:g,"default-expand-all":"",dataMethod:I,onDataMethodDataLoading:u[0]||(u[0]=i=>a.value.loading=i),paginationProps:T,columns:s.tableColumns},{defaultAppend:P(()=>[l(h,{label:"操作",width:"180"},{default:P(({row:i,column:v,$index:N})=>[l(n,{options:x({row:i,column:v,$index:N}),dropdownTriggerButtonOptions:{text:!0,buttonText:"更多"}},null,8,["options"])]),_:1})]),_:1},8,["columns"]),l(_,{level:3})],64)}}});export{L as default};
