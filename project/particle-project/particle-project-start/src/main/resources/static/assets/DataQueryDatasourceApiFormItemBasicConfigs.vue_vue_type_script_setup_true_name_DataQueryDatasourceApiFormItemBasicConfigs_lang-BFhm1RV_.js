import{d as g,a as _,$ as J,r as n,b as y,o as c,g as b,c as O,e as v,w as f,j as S,I as q,F as k,S as C}from"./index-CmUqrYxc.js";const N=g({__name:"JdbcApiBasicConfig",props:{initJsonStr:{type:String},onSubmit:{type:Function,default:()=>({})}},setup(s,{expose:u}){const r=s,a=_({form:{}}),p=[{field:{name:"dataType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"数据类型",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_jdbc_basic_config_data_type"},props:{value:"value"}}}},{field:{name:"isSearchCount",value:!0},element:{comp:"el-switch",formItemProps:{label:"是否查询总数",tips:"仅在分页时有效"},compProps:{activeText:"查询总数",inactiveText:"不查询总数"}}},{field:{name:"sqlTemplateType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"sql模板类型",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_jdbc_basic_config_sql_template_type"},props:{value:"value"}}}},{field:{name:"sqlTemplate"},element:{comp:"el-input",formItemProps:{label:"sql模板内容",required:!0,tips:`1. enjoy模板 最终会渲染为sql语句， 取值示例 where name = '#(data.name)' data为请求参数句柄，<br/>2. mybatisScript模板 最终会渲染为sql语句， 需要以&lt;script&gt;开头，注意前面不能有空格 取值示例&lt;script&gt;&lt;if test="data.data.name != null"&gt;where name = #{data.data.name}&lt;/if&gt;&lt;/script&gt; 注意：data.data(两个data)为请求参数句柄<br/>3. raw模式 请直接写sql，不具备变量渲染能力<br/>4. groovy脚本支持，具有编程的能力最终结果将使用该脚本的返回值直接返回数据,注意：如果返回数据类型为字符串则做为sql直接使用，否则直接做为返回数据，内置句柄为 jdbcService 和 data，jdbcService 为查询数据服务，data为持有请求参数句柄`},compProps:{type:"textarea",rows:15,clearable:!0}}}];J(()=>{if(r.initJsonStr){let e=JSON.parse(r.initJsonStr);for(let o in e)a.form[o]=e[o]}});const m=n({buttonText:"确认"}),l=()=>{r.onSubmit()};return u({form:a.form}),(e,o)=>{const d=y("PtForm");return c(),b(d,{ref:"selfFormRef",form:a.form,class:"pt-wdith-100-pc",method:l,defaultButtonsShow:"submit,reset",submitAttrs:m.value,layout:1,comps:p},null,8,["form","submitAttrs"])}}}),$=g({__name:"HttpApiBasicConfig",props:{initJsonStr:{type:String},onSubmit:{type:Function,default:()=>({})}},setup(s,{expose:u}){const r=s,a=_({form:{}}),p=[{field:{name:"requestMethod"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"请求方法",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_http_basic_config_request_method"},props:{value:"value"}}}},{field:{name:"requestContentType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"请求内容类型",required:!0,tips:"get请求可以请求没有使用一，随便选一个"},compProps:{dictParam:{groupCode:"dataquery_datasource_api_http_basic_config_content_type"},props:{value:"value"}}}},{field:{name:"responseContentType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"响应内容类型",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_http_basic_config_content_type"},props:{value:"value"}}}},{field:{name:"requestUrlRenderType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"请求地址渲染类型",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_http_basic_config_request_url_render_type"},props:{value:"value"}}}},{field:{name:"requestUrlTemplate"},element:{comp:"el-input",formItemProps:{label:"请求地址",required:!0,displayBlock:!0,tips:"必须返回地址字符串<br/>data为请求参数句柄<br/>queryString 为查询参数句柄<br/>username和password为用户名和密码来源为数据源配置<br/>authMap 为额外认证参数，在数据源认证脚本中设置后可使用"},compProps:{clearable:!0,placeholder:"如：/getUserList",type:"textarea",rows:10}}}];J(()=>{if(r.initJsonStr){let e=JSON.parse(r.initJsonStr);for(let o in e)a.form[o]=e[o]}});const m=n({buttonText:"确认"}),l=()=>{r.onSubmit()};return u({form:a.form}),(e,o)=>{const d=y("PtForm");return c(),b(d,{ref:"selfFormRef",form:a.form,class:"pt-wdith-100-pc",method:l,defaultButtonsShow:"submit,reset",submitAttrs:m.value,labelWidth:"150",inline:"",layout:[3,1,1],comps:p},null,8,["form","submitAttrs"])}}}),M=g({__name:"Neo4jApiBasicConfig",props:{initJsonStr:{type:String},onSubmit:{type:Function,default:()=>({})}},setup(s,{expose:u}){const r=s,a=_({form:{}}),p=[{field:{name:"dataType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"数据类型",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_neo4j_basic_config_data_type"},props:{value:"value"}}}},{field:{name:"cqlTemplateType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"cql模板类型",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_neo4j_basic_config_cql_template_type"},props:{value:"value"}}}},{field:{name:"cqlTemplate"},element:{comp:"el-input",formItemProps:{label:"cql模板内容",required:!0,tips:"1. enjoy模板 最终会渲染为cql语句， 取值示例 where name = '#(data.name)' data为请求参数句柄，<br/>2. raw模式 请直接写cql，不具备变量渲染能力<br/>3. groovy脚本支持，具有编程的能力最终结果将使用该脚本的返回值直接返回数据,注意：如果返回数据类型为字符串则做为cql直接使用，否则直接做为返回数据，内置句柄有三个为 driver、neo4jClient、neo4jTemplate 和 data，driver、neo4jClient、neo4jTemplate为查询数据服务，data为持有请求参数句柄"},compProps:{type:"textarea",rows:15,clearable:!0}}},{field:{name:"cqlCountTemplate"},element:{comp:"el-input",formItemProps:{label:"cql总数模板内容",required:({form:e,formData:o})=>o.dataType&&o.dataType.value=="page",tips:"该模板仅在分页时使用，用来统计查询数据的总数，须和[cql模板内容]查询条件保持一致,需要返回一个统计数量，如：match(n) return count(*)"},compProps:{type:"textarea",rows:15,clearable:!0}}}];J(()=>{if(r.initJsonStr){let e=JSON.parse(r.initJsonStr);for(let o in e)a.form[o]=e[o]}});const m=n({buttonText:"确认"}),l=()=>{r.onSubmit()};return u({form:a.form}),(e,o)=>{const d=y("PtForm");return c(),b(d,{ref:"selfFormRef",form:a.form,class:"pt-wdith-100-pc",method:l,defaultButtonsShow:"submit,reset",submitAttrs:m.value,layout:1,comps:p},null,8,["form","submitAttrs"])}}}),U=g({__name:"EsApiBasicConfig",props:{initJsonStr:{type:String},onSubmit:{type:Function,default:()=>({})}},setup(s,{expose:u}){const r=s,a=_({form:{}}),p=[{field:{name:"dataType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"数据类型",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_es_basic_config_data_type"},props:{value:"value"}}}},{field:{name:"dslTemplateType"},element:{comp:"PtDictFrontSelect",formItemProps:{label:"dsl模板类型",required:!0},compProps:{dictParam:{groupCode:"dataquery_datasource_api_es_basic_config_dsl_template_type"},props:{value:"value"}}}},{field:{name:"indexNames"},element:{comp:"el-input",formItemProps:{label:"索引名称",tips:"多个以逗号分隔"},compProps:{clearable:!0}}},{field:{name:"dslTemplate"},element:{comp:"el-input",formItemProps:{label:"dsl模板内容",required:!0,labelTips:'支持与query同级指定 如：indexNames: "xxx", 的索引名称，如果上面索引名称字段指定了索引名称，则该设置不生效，建议使用上面的索引名称字段',tips:'1. enjoy模板 最终会渲染为dsl语句， 取值示例 {"query":{"term":{"title":"#(data.name)"}}} data为请求参数句柄，<br/>2. raw模式 请直接写dsl，不具备变量渲染能力<br/>3. groovy脚本支持，具有编程的能力最终结果将使用该脚本的返回值直接返回数据,注意：如果返回数据类型为字符串则做为dsl直接使用，否则直接做为返回数据，内置句柄有三个为 elasticsearchTemplate、elasticsearchClient、restClient 和 data，elasticsearchTemplate、elasticsearchClient、restClient为查询数据服务，data为持有请求参数句柄注意：分页查询不支持es的from和size属性查询，设置后请求分页参数无效，请根据分页参数传参使用，单条和多条支持'},compProps:{type:"textarea",rows:15,clearable:!0,placeholder:`{
    "query": {
        "match": {
            "title": "测试es0"
        }
    },
    "sort": {
            "id": {
                "order": "desc"
            }
        }
}`}}},{field:{name:"dslCountTemplate"},element:{comp:"el-input",formItemProps:{label:"dsl总数模板内容",tips:"该模板仅在分页时使用，用来统计查询数据的总数，须和[dsl模板内容]查询条件保持一致，注意es在查询时会返回总数，不建议设置该项"},compProps:{type:"textarea",rows:15,clearable:!0}}}];J(()=>{if(r.initJsonStr){let e=JSON.parse(r.initJsonStr);for(let o in e)a.form[o]=e[o]}});const m=n({buttonText:"确认"}),l=()=>{r.onSubmit()};return u({form:a.form}),(e,o)=>{const d=y("PtForm");return c(),b(d,{ref:"selfFormRef",form:a.form,class:"pt-wdith-100-pc",method:l,defaultButtonsShow:"submit,reset",submitAttrs:m.value,layout:1,comps:p},null,8,["form","submitAttrs"])}}}),K=g({__name:"DataQueryDatasourceApiFormItemBasicConfigs",props:{form:{type:Object,required:!0},formData:{type:Object,required:!0}},setup(s,{expose:u}){const r=n(null),a=n(null),p=n(null),m=n(null),l=s,e=_({jdbc:{dialogVisible:!1},http:{dialogVisible:!1},neo4j:{dialogVisible:!1},es:{dialogVisible:!1}}),o=h=>JSON.stringify(h),d=()=>{l.form.configJson=o(r.value.form),e.jdbc.dialogVisible=!1},V=()=>{l.form.configJson=o(a.value.form),e.http.dialogVisible=!1},x=()=>{l.form.configJson=o(p.value.form),e.neo4j.dialogVisible=!1},A=()=>{l.form.configJson=o(m.value.form),e.es.dialogVisible=!1},j=n(!1),w=()=>{C(()=>{j.value=!0})},D=n(!1),B=()=>{C(()=>{D.value=!0})},F=n(!1),I=()=>{C(()=>{F.value=!0})},T=n(!1),R=()=>{C(()=>{T.value=!0})};return u({reactiveData:e}),(h,t)=>{const P=y("el-dialog");return c(),O(k,null,[v(P,{modelValue:e.jdbc.dialogVisible,"onUpdate:modelValue":t[0]||(t[0]=i=>e.jdbc.dialogVisible=i),width:"70%",title:"jdbc配置Json",onOpen:w,onClosed:t[1]||(t[1]=i=>j.value=!1),"append-to-body":"","destroy-on-close":""},{footer:f(()=>t[8]||(t[8]=[S("div",{id:"dataqueryDatasourceApiJdbcBasicConfigDialogFooter"},null,-1)])),default:f(()=>[j.value?(c(),b(N,{key:0,ref_key:"jdbcConfigRef",ref:r,initJsonStr:s.form.configJson,onSubmit:d,buttonsTeleportProps:{disabled:!1,to:"#dataqueryDatasourceApiJdbcBasicConfigDialogFooter"}},null,8,["initJsonStr"])):q("",!0)]),_:1},8,["modelValue"]),v(P,{modelValue:e.http.dialogVisible,"onUpdate:modelValue":t[2]||(t[2]=i=>e.http.dialogVisible=i),width:"70%",title:"http配置Json",onOpen:B,onClosed:t[3]||(t[3]=i=>D.value=!1),"append-to-body":"","destroy-on-close":""},{footer:f(()=>t[9]||(t[9]=[S("div",{id:"dataqueryDatasourceApiHttpBasicConfigDialogFooter"},null,-1)])),default:f(()=>[D.value?(c(),b($,{key:0,ref_key:"httpConfigRef",ref:a,initJsonStr:s.form.configJson,onSubmit:V,buttonsTeleportProps:{disabled:!1,to:"#dataqueryDatasourceApiHttpBasicConfigDialogFooter"}},null,8,["initJsonStr"])):q("",!0)]),_:1},8,["modelValue"]),v(P,{modelValue:e.neo4j.dialogVisible,"onUpdate:modelValue":t[4]||(t[4]=i=>e.neo4j.dialogVisible=i),width:"70%",title:"neo4j配置Json",onOpen:I,onClosed:t[5]||(t[5]=i=>F.value=!1),"append-to-body":"","destroy-on-close":""},{footer:f(()=>t[10]||(t[10]=[S("div",{id:"dataqueryDatasourceApiNeo4jBasicConfigDialogFooter"},null,-1)])),default:f(()=>[F.value?(c(),b(M,{key:0,ref_key:"neo4jConfigRef",ref:p,initJsonStr:s.form.configJson,onSubmit:x,buttonsTeleportProps:{disabled:!1,to:"#dataqueryDatasourceApiNeo4jBasicConfigDialogFooter"}},null,8,["initJsonStr"])):q("",!0)]),_:1},8,["modelValue"]),v(P,{modelValue:e.es.dialogVisible,"onUpdate:modelValue":t[6]||(t[6]=i=>e.es.dialogVisible=i),width:"70%",title:"es配置Json",onOpen:R,onClosed:t[7]||(t[7]=i=>T.value=!1),"append-to-body":"","destroy-on-close":""},{footer:f(()=>t[11]||(t[11]=[S("div",{id:"dataqueryDatasourceApiEsBasicConfigDialogFooter"},null,-1)])),default:f(()=>[T.value?(c(),b(U,{key:0,ref_key:"esConfigRef",ref:m,initJsonStr:s.form.configJson,onSubmit:A,buttonsTeleportProps:{disabled:!1,to:"#dataqueryDatasourceApiEsBasicConfigDialogFooter"}},null,8,["initJsonStr"])):q("",!0)]),_:1},8,["modelValue"])],64)}}});export{K as _};
