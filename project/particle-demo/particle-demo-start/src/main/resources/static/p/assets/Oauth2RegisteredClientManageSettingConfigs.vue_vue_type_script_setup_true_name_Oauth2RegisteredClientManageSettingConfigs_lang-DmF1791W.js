import{i as N,d as T,a as h,r as u,X as I,b as v,o as _,g as k,c as J,e as P,w as b,h as y,E as C,F as A,Q as O}from"./index-B_FSv1tI.js";let D="/front/web/oauth2_registered_client";const R=r=>N.get(D+"/algorithm_list",{params:r}),V=T({__name:"ClientSettings",props:{initJsonStr:{type:String},onSubmit:{type:Function,default:()=>({})},authorizationGrantTypes:{type:Array,default:()=>[]}},setup(r,{expose:p}){const t=r,e=h({form:{},formData:{}}),f=({authorizationGrantTypes:n})=>n?n.some(s=>s=="authorization_code"):!1,o=u([{field:{name:"settings.client.require-proof-key",value:!0},element:{comp:"el-switch",formItemProps:{label:"REQUIRE_PROOF_KEY",required:()=>f(t.authorizationGrantTypes),tips:"是否要求客户端提供验证密钥，这是针对授权码模式(authorization_code)，客户端无能力保护自己的客户端密钥（client_secret）时，防止 code 被拦截的验证"},compProps:{}}},{field:{name:"settings.client.require-authorization-consent",value:!0},element:{comp:"el-switch",formItemProps:{label:"REQUIRE_AUTHORIZATION_CONSENT",required:()=>f(t.authorizationGrantTypes),tips:"针对授权类型为 authorization_code 或 device_code 时，是否需要资源拥有者确认，建议选择需要确认，一般是这个流程"},compProps:{}}},{field:{name:"settings.client.token-endpoint-authentication-signing-algorithm"},element:{comp:"PtSelect",formItemProps:{label:"TOKEN_ENDPOINT_AUTHENTICATION_SIGNING_ALGORITHM",required:!1,tips:"授权方法为 private_key_jwt 或 client_secret_jwt 时必填,主要指定签名方式"},compProps:{dataMethod:R,props:{value:"value",label:"name"}}}},{field:{name:"settings.client.jwk-set-url"},element:{comp:"el-input",formItemProps:{label:"JWK_SET_URL",required:!1,tips:"http(s)开头",displayBlock:!0},compProps:{}}}]);I(()=>{if(t.initJsonStr){let n=JSON.parse(t.initJsonStr);for(let s in n)e.form[s]=n[s]}});const c=u({buttonText:"确认"}),d=()=>{t.onSubmit()};return p({form:e.form}),(n,s)=>{const g=v("PtForm");return _(),k(g,{form:e.form,formData:e.formData,labelWidth:"120",method:d,defaultButtonsShow:"submit,reset",submitAttrs:c.value,inline:"",layout:[3,1],comps:o.value},null,8,["form","formData","submitAttrs","comps"])}}}),M=T({__name:"TokenSettings",props:{initJsonStr:{type:String},onSubmit:{type:Function,default:()=>({})},authorizationGrantTypes:{type:Array,default:()=>[]}},setup(r,{expose:p}){const t=r,e=h({form:{},formData:{}});let o=JSON.stringify({value:"self-contained"}),d=JSON.stringify({value:"reference"});const n=u([{field:{name:"settings.token.authorization-code-time-to-live",value:"PT5M"},element:{comp:"el-input",formItemProps:{label:"AUTHORIZATION_CODE_TIME_TO_LIVE",required:!0,tips:"authorization_code 时长设置，建议设置为分钟为单位，例：PT5M 代表5分钟"},compProps:{}}},{field:{name:"settings.token.access-token-time-to-live",value:"PT5M"},element:{comp:"el-input",formItemProps:{label:"ACCESS_TOKEN_TIME_TO_LIVE",required:!0,tips:"access_token 时长设置，建议设置为分钟为单位，例：PT5M 代表5分钟"},compProps:{}}},{field:{name:"settings.token.access-token-format",value:o},element:{comp:"PtSelect",formItemProps:{label:"ACCESS_TOKEN_FORMAT",required:!0,tips:"access_token 格式设置"},compProps:{dataMethod:()=>({data:[{id:o,name:"SELF_CONTAINED"},{id:d,name:"REFERENCE"}]})}}},{field:{name:"settings.token.reuse-refresh-tokens",value:!0},element:{comp:"el-switch",formItemProps:{label:"REUSE_REFRESH_TOKENS",required:!0,tips:"refresh_token 是否重复使用，这是使用 refresh_token 刷新 token 时，如果设置为 true，将返回原来 refresh_token，否则生成一个新的 refresh_token"},compProps:{}}},{field:{name:"settings.token.refresh-token-time-to-live",value:"PT60M"},element:{comp:"el-input",formItemProps:{label:"REFRESH_TOKEN_TIME_TO_LIVE",required:!0,tips:"refresh_token 时长设置，建议设置为分钟为单位，例：PT60M 代表60分钟、PT1H 代表1小时"},compProps:{}}},{field:{name:"settings.token.id-token-signature-algorithm",value:"RS256"},element:{comp:"PtSelect",formItemProps:{label:"ID_TOKEN_SIGNATURE_ALGORITHM",required:!0,tips:"token 签名设置"},compProps:{dataMethod:()=>R({type:"signature"}),props:{value:"value",label:"name"}}}}]);I(()=>{if(t.initJsonStr){let m=JSON.parse(t.initJsonStr);for(let l in m)if(l=="settings.token.access-token-format"){let a=m[l];a&&(typeof a=="string"?e.form[l]=JSON.stringify(JSON.parse(a)):e.form[l]=JSON.stringify(a))}else e.form[l]=m[l]}});const s=u({buttonText:"确认"}),g=()=>{t.onSubmit()};return p({form:e.form}),(m,l)=>{const a=v("PtForm");return _(),k(a,{form:e.form,formData:e.formData,labelWidth:"120",method:g,defaultButtonsShow:"submit,reset",submitAttrs:s.value,inline:"",layout:[3,1],comps:n.value},null,8,["form","formData","submitAttrs","comps"])}}}),q=T({__name:"Oauth2RegisteredClientManageSettingConfigs",props:{form:{type:Object,required:!0},formData:{type:Object,required:!0}},setup(r,{expose:p}){const t=u(null),e=u(null),f=r,o=h({clientSettingConfigJson:{dialogVisible:!1},tokenSettingConfigJson:{dialogVisible:!1}}),c=a=>JSON.stringify(a),d=()=>{f.form.clientSettings=c(t.value.form),o.clientSettingConfigJson.dialogVisible=!1},n=u(!1),s=()=>{O(()=>{n.value=!0})},g=()=>{f.form.tokenSettings=c(e.value.form),o.tokenSettingConfigJson.dialogVisible=!1},m=u(!1),l=()=>{O(()=>{m.value=!0})};return p({reactiveData:o}),(a,i)=>{const E=v("el-dialog");return _(),J(A,null,[P(E,{modelValue:o.clientSettingConfigJson.dialogVisible,"onUpdate:modelValue":i[0]||(i[0]=S=>o.clientSettingConfigJson.dialogVisible=S),width:"70%",title:"客户端配置Json",onOpen:s,onClosed:i[1]||(i[1]=S=>n.value=!1),"append-to-body":"","destroy-on-close":""},{footer:b(()=>i[4]||(i[4]=[y("div",{id:"oauth2RegisteredClientClientSettingDialogFooter"},null,-1)])),default:b(()=>[n.value?(_(),k(V,{key:0,ref_key:"clientSettingRef",ref:t,initJsonStr:r.form.clientSettings,onSubmit:d,authorizationGrantTypes:r.form.authorizationGrantTypes,buttonsTeleportProps:{disabled:!1,to:"#oauth2RegisteredClientClientSettingDialogFooter"}},null,8,["initJsonStr","authorizationGrantTypes"])):C("",!0)]),_:1},8,["modelValue"]),P(E,{modelValue:o.tokenSettingConfigJson.dialogVisible,"onUpdate:modelValue":i[2]||(i[2]=S=>o.tokenSettingConfigJson.dialogVisible=S),width:"70%",title:"token配置Json",onOpen:l,onClosed:i[3]||(i[3]=S=>m.value=!1),"append-to-body":"","destroy-on-close":""},{footer:b(()=>i[5]||(i[5]=[y("div",{id:"oauth2RegisteredClientTokenSettingDialogFooter"},null,-1)])),default:b(()=>[m.value?(_(),k(M,{key:0,ref_key:"tokenSettingRef",ref:e,initJsonStr:r.form.tokenSettings,onSubmit:g,buttonsTeleportProps:{disabled:!1,to:"#oauth2RegisteredClientTokenSettingDialogFooter"}},null,8,["initJsonStr"])):C("",!0)]),_:1},8,["modelValue"])],64)}}});export{q as _};
