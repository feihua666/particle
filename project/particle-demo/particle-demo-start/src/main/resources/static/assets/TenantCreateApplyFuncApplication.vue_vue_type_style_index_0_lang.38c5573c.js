import{l as y}from"./funcApplicationAdminApi.442fdf4b.js";import{d as p,a as b,r as i,I as D,b as u,o as s,h as A,w as r,c as k,F as C,T as S,aA as T,e as F,f as x,U as P}from"./index.48f373ed.js";import{r as N,a as V}from"./funcApplicationCompItem.100286a3.js";const w=p({name:"TenantCreateApplyFuncApplicationAssignFunc"}),B=p({...w,props:{...N,limitFuncApplicationId:{type:String},checkedFuncIds:{type:Array,default:()=>[]}},setup(d,{expose:m}){const n=d,o=b({form:{},formData:{}}),l=i([V({props:n,required:!0}),{field:{name:"funcIds",value:[]},element:{comp:"PtTree",formItemProps:{label:"\u529F\u80FD",required:!0},compProps:({form:c})=>({dataInitMethod:()=>({data:n.checkedFuncIds}),dataMethod:()=>D({funcApplicationId:n.limitFuncApplicationId}),dataMethodResultHandleConvertToTree:!0,showCheckbox:!0})}}]);return m({form:o.form}),(c,f)=>{const _=u("PtForm");return s(),A(_,{form:o.form,formData:o.formData,labelWidth:"80",defaultButtonsShow:"",inline:"",layout:1,comps:l.value},null,8,["form","formData","comps"])}}}),M=p({name:"TenantCreateApplyFuncApplication"}),E=p({...M,props:{initSelectedData:{type:Array,default:()=>[]}},setup(d,{expose:m}){const n=d,o=i([]),l=i(""),c=i(null),f=t=>{if(n.initSelectedData.length==0)return[];for(let e=0;e<n.initSelectedData.length;e++)if(n.initSelectedData[e].funcApplicationId==t)return n.initSelectedData[e].funcIds;return[]};y({}).then(t=>{o.value=t.data.data,l.value=t.data.data[0].code});const _=()=>{let t=[];for(let e=0;e<c.value.length;e++)c.value[e].form.funcIds.length!=0&&t.push(c.value[e].form);return t},h=t=>t?t.length==0:!0;return m({getSelectedData:_}),(t,e)=>{const I=u("el-badge"),g=u("el-tab-pane"),v=u("el-tabs");return s(),A(v,{modelValue:l.value,"onUpdate:modelValue":e[0]||(e[0]=a=>l.value=a)},{default:r(()=>[(s(!0),k(C,null,S(o.value,a=>(s(),A(g,{key:a.id,label:a.name,name:a.code},T({default:r(()=>[F(B,{ref_for:!0,ref_key:"funcApplicationAssignFuncRef",ref:c,funcApplicationId:a.id,funcApplicationName:a.name,limitFuncApplicationId:a.id,checkedFuncIds:f(a.id)},null,8,["funcApplicationId","funcApplicationName","limitFuncApplicationId","checkedFuncIds"])]),_:2},[h(f(a.id))?void 0:{name:"label",fn:r(()=>[F(I,{type:"success","is-dot":"",class:"pt-message-template-content-detail-json-badge"},{default:r(()=>[x(P(a.name),1)]),_:2},1024)]),key:"0"}]),1032,["label","name"]))),128))]),_:1},8,["modelValue"])}}});export{E as _};
