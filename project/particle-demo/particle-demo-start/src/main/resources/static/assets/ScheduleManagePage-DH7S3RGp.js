import{i as d,d as I,r as P,a as M,b as l,o as D,c as w,e as n,w as g,F as N}from"./index-D8BtRcSm.js";const B=[{field:{name:"schedulerName"},element:{comp:"el-input",formItemProps:{label:"任务计划名称"},compProps:{clearable:!0}}},{field:{name:"schedulerInstanceId"},element:{comp:"el-input",formItemProps:{label:"任务计划实例id"},compProps:{clearable:!0}}}];let i="/admin/web/schedule";const y=o=>d.post(i+"/standby",o),F=o=>d.post(i+"/start",o),x=o=>d.post(i+"/shutdown",o),J=o=>d.get(i+"/getScheduleList",{params:o}),A=I({__name:"ScheduleManagePage",setup(o){const b=P(null),u=M({form:{},formComps:B,tableColumns:[{prop:"schedulerName",label:"任务计划名称"},{prop:"schedulerInstanceId",label:"任务计划实例id"},{prop:"isStarted",label:"是否开启"},{prop:"isInStandbyMode",label:"是否挂起"},{prop:"isShutdown",label:"是否停止"},{prop:"scheduleMetaData.startAt",label:"启动时间"},{prop:"scheduleMetaData.version",label:"版本"},{prop:"scheduleMetaData.schedulerClassName",label:"任务计划实例类",showOverflowTooltip:!0},{prop:"scheduleMetaData.numberOfJobsExecuted",label:"已执行任务数"},{prop:"scheduleMetaData.jobStoreClassName",label:"任务存储类",showOverflowTooltip:!0},{prop:"scheduleMetaData.isJobStoreSupportsPersistence",label:"任务存储是否支持持久化"},{prop:"scheduleMetaData.isJobStoreSupportsPersistence",label:"任务存储是否集群模式"},{prop:"scheduleMetaData.threadPoolClassName",label:"线程池类",showOverflowTooltip:!0},{prop:"scheduleMetaData.threadPoolSize",label:"当前线程池线程数量"}]}),m=P({buttonText:"查询",loading:!1,permission:"schedule:getScheduleList"}),r=()=>{b.value.refreshData()},_=({pageQuery:e})=>J({...u.form,...e}),S={permission:m.value.permission},v=({row:e,column:p,$index:c})=>{if(c<0)return[];let s={schedulerName:e.schedulerName,schedulerInstanceId:e.schedulerInstanceId},a={schedulerName:e.schedulerName,schedulerInstanceId:e.schedulerInstanceId,isWaitForJobsToComplete:!0};return[{txt:"任务管理",text:!0,permission:"schedule:getJobDetailList",route:{path:"/admin/scheduleJobManagePage",query:s}},{txt:"触发器管理",text:!0,position:"more",permission:"schedule:getTriggerList",route:{path:"/admin/scheduleTriggerManagePage",query:s}},{txt:"强制停止",text:!0,position:"more",permission:"schedule:shutdown",disabled:!e.isStarted,methodConfirmText:`确定要强制停止 ${e.name} 吗？正在执行中的任务会被中断`,method(){return a.isWaitForJobsToComplete=!1,x(a).then(t=>(r(),Promise.resolve(t)))}},{txt:"停止",text:!0,position:"more",permission:"schedule:shutdown",disabled:!e.isStarted,methodConfirmText:`确定要强制停止 ${e.name} 吗？操作后会等待任务完成后才能停止`,method(){return a.isWaitForJobsToComplete=!0,x(a).then(t=>(r(),Promise.resolve(t)))}},{txt:"挂起",text:!0,position:"more",permission:"schedule:standby",disabled:e.isInStandbyMode,methodConfirmText:`确定要挂起 ${e.name} 吗？`,method(){return y(s).then(t=>(r(),Promise.resolve(t)))}},{txt:"启动|恢复",text:!0,position:"more",permission:"schedule:start",disabled:e.isStarted,methodConfirmText:`确定要启动或恢复 ${e.name} 吗？当任务停止或挂起后，需要重新启动才能再次执行任务`,method(){return F(s).then(t=>(r(),Promise.resolve(t)))}}]};return(e,p)=>{const c=l("PtForm"),s=l("PtButtonGroup"),a=l("el-table-column"),f=l("PtTable"),t=l("PtRouteViewPopover");return D(),w(N,null,[n(c,{form:u.form,method:r,defaultButtonsShow:"submit,reset",submitAttrs:m.value,inline:"",comps:u.formComps},null,8,["form","submitAttrs","comps"]),n(f,{ref_key:"tableRef",ref:b,"default-expand-all":"",dataMethod:_,onDataMethodDataLoading:p[0]||(p[0]=h=>m.value.loading=h),paginationProps:S,columns:u.tableColumns},{defaultAppend:g(()=>[n(a,{label:"操作",width:"180"},{default:g(({row:h,column:T,$index:C})=>[n(s,{options:v({row:h,column:T,$index:C}),dropdownTriggerButtonOptions:{text:!0,buttonText:"更多"}},null,8,["options"])]),_:1})]),_:1},8,["columns"]),n(t,{level:3})],64)}}});export{A as default};
