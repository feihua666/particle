<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.particle</groupId>
    <artifactId>particle</artifactId>
    <version>0.1.0-beta-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>particle</name>
    <description>particle project for Spring Boot</description>
    <modules>
        <module>common</module>
        <module>component</module>
        <module>global</module>
        <module>project</module>
    </modules>
    <!-- 全局属性 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- idea 创建 module 自动生成 -->
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <!-- spring cloud 版本 -->
        <spring-cloud.version>2021.0.4</spring-cloud.version>
        <!-- 定义项目的版本和本pom一致，所有子项目间相互依赖请使用该变量版本 -->
        <particle.version>${project.version}</particle.version>
        <!-- 第三方工具集合，请优先使用该工具集 -->
        <hutool-all.version>5.5.6</hutool-all.version>
        <!-- 强大的java工具类 ，全局引入，方便使用-->
        <guava.version>30.1.1-jre</guava.version>
        <!-- 实体转换 -->
        <org.mapstruct.version>1.4.1.Final</org.mapstruct.version>
        <!-- swagger 接口文档 -->
        <springfox-boot-starter.version>3.0.0</springfox-boot-starter.version>
        <!-- swagger ui-接口文档 -->
        <knife4j-spring-boot-starter>3.0.3</knife4j-spring-boot-starter>
        <!-- mybatis-plus-boot-starter -->
        <!-- 注意在升级时，因为自定义了部分逻辑，需要同步修改是否兼容 参见：global-mybatis-plus-boot-starter -->
        <!-- 注意在升级时详情查看 com.baomidou.mybatisplus.core.conditions.segments.README.md -->
        <mybatis-plus-boot-starter.version>3.5.3</mybatis-plus-boot-starter.version>

        <!-- 动态多数据源，见 global-datasource-boot-starter 引入提供统一依赖 -->
        <dynamic-datasource.version>3.6.1</dynamic-datasource.version>
        <!-- 汉字转拼音 -->
        <pinyin4j.version>2.5.1</pinyin4j.version>
        <!-- 主要用于图片参数，当前主要是苹果手机图片旋转问题 -->
        <metadata-extractor.version>2.15.0</metadata-extractor.version>
        <!-- https://github.com/oldratlee/log4j2-ttl-thread-context-map -->
        <log4j2-ttl-thread-context-map.version>1.3.3</log4j2-ttl-thread-context-map.version>
        <!-- Log4j2 AsyncLogger -->
        <disruptor.version>3.4.4</disruptor.version>

        <!-- 测试数据用 可以将实体填充数据 测试用例使用-->
        <jmockdata.version>4.2.0</jmockdata.version>
        <shedlock.version>4.41.0</shedlock.version>

        <!-- 类似于freeMarker的模板引擎 -->
        <com.jfinal.enjoy>5.0.3</com.jfinal.enjoy>
        <!-- groovy脚本，添加主要是为了数据查询支持groovy脚本 -->
        <groovy-all.version>2.4.21</groovy-all.version>
        <!-- http简单客户端使用 jodd是一个java工具包，添加统一版本目前只是为了使用 大数据源的jodd http实现 -->
        <jodd.version>6.3.0</jodd.version>
    </properties>
    <!-- 依赖 -->
    <dependencies>

        <!-- lombok -->
        <!-- 主要用于pojo对象的get、set方法自动生成 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!--mapStruct  pojo映射转换工具 -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <!-- 强大工具库，当前为限流引入 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <!-- spring cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- shedlock 分布式锁 一般用于定时任务-->
            <dependency>
                <groupId>net.javacrumbs.shedlock</groupId>
                <artifactId>shedlock-bom</artifactId>
                <version>${shedlock.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
