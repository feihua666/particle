<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>global</artifactId>
        <groupId>com.particle</groupId>
        <version>2.1.1-beta-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>global-tool</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- hutool 工具类集 -->
        <!-- https://hutool.cn -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool-all.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <!-- google 强大工具库，常用工具类本地限流等 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <!-- 汉字转拼音 -->
        <!-- PinyinTool 中有使用 -->
        <dependency>
            <groupId>com.belerweb</groupId>
            <artifactId>pinyin4j</artifactId>
            <version>${pinyin4j.version}</version>
        </dependency>
        <!-- 日志门面 版本已在springboot parent中定义 不传递依赖 -->
        <!-- PojoPropertyDiffTool 中有使用-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- swagger 接口文档工具 不传递依赖 -->
        <!-- PojoPropertyDiffTool 中有使用 -->
<!--        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>${springfox-boot-starter.version}</version>
            <scope>provided</scope>
        </dependency>-->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations-v3.version}</version>
        </dependency>


        <!-- 主要用于图片参数，当前主要是苹果手机图片旋转问题 -->
        <!-- ImageTool 中有使用 -->
        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
            <version>${metadata-extractor.version}</version>
        </dependency>

        <!-- http客户端工具类，使用该类可以保留cookie -->
        <!-- 版本已在 spring-boot-starter-parent 中定义 -->
        <!-- HttpClientTool 中有使用 -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- servlet-api 不传递依赖 版本已在springboot parent 中定义 -->
        <!-- RequestTool中有使用 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 提供链路日志 traceId 跟踪 不传递依赖-->
        <!-- 入口简介：利用日志的MDC将日志写入，并替换了 logging.pattern.level-->
        <!-- 参见日志pattern替换org.springframework.cloud.sleuth.autoconfig.TraceEnvironmentPostProcessor -->
        <!-- 参见日志MDC处理 org.springframework.cloud.sleuth.log.Slf4jScopeDecorator -->
        <!-- TraceTool 中有使用 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- 仅模板树测试 -->
        <dependency>
            <groupId>com.jfinal</groupId>
            <artifactId>enjoy</artifactId>
            <version>${com.jfinal.enjoy}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 仅测试 正式使用请自行引用 主要是为了数据查询动态配置支持 groovy脚本而添加-->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy-all.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- 对象转httpjson字符串使用 为要主了使用 objectMapper-->
        <!-- 无需引入版本 因为在spring父级中已间接引入 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- *********引入POI依赖 可以使用，仅测试使用，不依赖传递 ************ -->
        <!-- 在 hutool 中依赖poi对excel等文档做了封装，该引入可以借用其工具使用 -->
        <!-- 推荐引入poi-ooxml，这个包会自动关联引入poi包，且可以很好的支持Office2007+的文档格式 -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <!-- 如果需要使用Sax方式读取Excel，需要引入以下依赖（POI-4.x以上这个非必须）： -->
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>${xercesImpl.version}</version>
        </dependency>
        <!-- *********引入POI依赖 可以使用，仅测试使用，不依赖传递 ************ -->

        <!-- java 对象差异对比工具 都见 diff包数据审计 -->
        <!-- https://mvnrepository.com/artifact/org.javers/javers-core -->
        <dependency>
            <groupId>org.javers</groupId>
            <artifactId>javers-core</artifactId>
            <version>${javers-core.version}</version>
        </dependency>

        <!-- 使用其判断媒体类型 主要使用的类为 MediaTypeFactory 参见 FileTool -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- 提供retry工具 -->
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <scope>provided</scope>
        </dependency>


        <!-- 日志中间接引入了 https://github.com/alibaba/transmittable-thread-local 以方便的修饰线程变量问题 -->
        <dependency>
            <groupId>com.particle</groupId>
            <artifactId>global-logging-boot-starter</artifactId>
            <version>${particle.version}</version>
        </dependency>
    </dependencies>
</project>